// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  passwordHash String @map("password_hash")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  categories Category[]
  tasks      Task[]
  calendarIntegrations CalendarIntegration[]

  @@map("users")
}

model Category {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  name      String
  color     String   @default("#3B82F6")
  isDefault Boolean  @default(false) @map("is_default")
  createdAt DateTime @default(now()) @map("created_at")

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks Task[]

  @@map("categories")
}

model Task {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  categoryId  String?   @map("category_id")
  title       String
  description String?
  dueDate     DateTime? @map("due_date") @db.Date
  dueTime     DateTime? @map("due_time") @db.Time
  priority    Priority  @default(MEDIUM)
  status      Status    @default(ACTIVE)
  completedAt DateTime? @map("completed_at")
  archivedAt  DateTime? @map("archived_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@index([userId])
  @@index([dueDate])
  @@index([status])
  @@map("tasks")
}

model CalendarIntegration {
  id               String    @id @default(cuid())
  userId           String    @map("user_id")
  googleCalendarId String?   @map("google_calendar_id")
  accessToken      String?   @map("access_token")
  refreshToken     String?   @map("refresh_token")
  tokenExpiresAt   DateTime? @map("token_expires_at")
  createdAt        DateTime  @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("calendar_integrations")
}

enum Priority {
  LOW    @map("low")
  MEDIUM @map("medium")
  HIGH   @map("high")
}

enum Status {
  ACTIVE    @map("active")
  COMPLETED @map("completed")
  ARCHIVED  @map("archived")
}