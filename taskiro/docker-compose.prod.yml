version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: taskiro-postgres-prod
    environment:
      POSTGRES_DB: taskiro_db
      POSTGRES_USER: taskiro_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - taskiro-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U taskiro_user -d taskiro_db']
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskiro-app-prod
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://taskiro_user:${POSTGRES_PASSWORD}@postgres:5432/taskiro_db
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - taskiro-network
    volumes:
      - ./logs:/app/logs

  nginx:
    image: nginx:alpine
    container_name: taskiro-nginx-prod
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./dist:/usr/share/nginx/html:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - taskiro-network

volumes:
  postgres_data:

networks:
  taskiro-network:
    driver: bridge
